datos = readxl::read_xls("INEGI Trabajo 28-06-2025/madres_jovenes.xlsx")
datos = readxl::read_excel("INEGI Trabajo 28-06-2025/madres_jovenes.xlsx")
View(datos)
datos = readxl::read_excel("INEGI Trabajo 28-06-2025/madres_jovenes.xlsx", sheet = 1)
View(datos)
View(datos)
View(datos)
View(datos)
View(datos)
substr(x = datos$CVEGEO, start = 1, stop = 2) |>  unique()
View(datos)
datos = datos |>
dplyr::filter(!is.na(Latitud))
View(datos)
datos = readxl::read_excel("INEGI Trabajo 28-06-2025/madres_jovenes.xlsx", sheet = 1)
View(datos)
municipios = sf::read_sf("../../Lalo/Escuela/Gob/Importantes_documentos_usar/Municipios/municipiosjair.shp")
datos_limpios = datos |>
dplyr::filter(!is.na(Latitud))
mapa_primero = sf::st_as_sf(x = datos_limpios, crs = sf::st_crs(municipios))
names(datos_limpios)
mapa_primero = sf::st_as_sf(x = datos_limpios, coords = c("Longuitud", "Latitud"), crs = sf::st_crs(municipios))
library(leaflet)
library(leaflet.extras)
mapa_web = leaflet() |>
addTiles() |>
addHeatmap(data = datos_limpios, lat = datos_limpios$Latitud, lng = datos_limpios$Longuitud)
mapa_web
View(datos)
datos_avance = datos
datos$LOC_RESID |>  unique()
datos$LOC_RESID |>  class()
datos$LOC_RESID[datos$LOC_RESID == 9999] = 1
View(datos_avance)
View(datos_avance)
View(datos)
View(datos)
View(datos_avance)
View(datos)
datos = datos |>
dplyr::mutate(CVEGEO_Nueva = paste0(sprintf("%02d", ENT_RESID), sprintf("%03d", MUN_RESID), sprintf("%04d", LOC_RESID)))
View(datos)
datos = datos |>
dplyr::select(IND_MUN:CVEGEO, CVEGEO_Nueva, Latitud:Frecuencia)
View(datos)
View(datos)
datos = datos |>
dplyr::select(IND_MUN:CVEGEO, CVEGEO_Nueva, Latitud:Frecuencia) |>
dplyr::select(-CVEGEO)
View(datos)
coordenadas = read.csv("INEGI Trabajo 28-06-2025/Coordenadas/AGEEML_2025514316256.csv")
coordenadas = read.csv("INEGI Trabajo 28-06-2025/Coordenadas/AGEEML_2025514316256.csv", fileEncoding = "latin1")
View(coordenadas)
View(coordenadas)
View(coordenadas)
coordenadas_corte = coordenadas |>
dplyr::mutate(CVEGEO = sprintf("%09d", CVEGEO))
View(coordenadas_corte)
coordenadas_corte = coordenadas |>
dplyr::mutate(CVEGEO = sprintf("%09d", CVEGEO)) |>
dplyr::select(CVEGEO, LON_DECIMAL, LAT_DECIMAL)
View(coordenadas_corte)
View(datos)
View(coordenadas_corte)
names(datos)
View(datos)
names(coordenadas_corte)
datos = merge(x = datos, y = coordenadas_corte, by.x = "CVEGEO_Nueva", by.y = "CVEGEO", all.x = T)
View(datos)
datos = datos |>  dplyr::select(CVEGEO_Nueva:Longuitud, LAT_DECIMAL,LON_DECIMAL, EDAD_MADN:Frecuencia)
View(datos)
datos = datos |>  dplyr::select(-Latitud,-Longuitud)
View(datos)
View(datos)
View(datos)
View(datos)
datos = datos |>  dplyr::select(-EDAD_PADREN)
datos$EDAD_PADN[datos$EDAD_PADN == "99"] = NA
View(datos)
View(coordenadas)
View(coordenadas_corte)
View(coordenadas)
View(coordenadas_corte)
View(coordenadas)
View(coordenadas_corte)
poblacion_total = read.csv("INEGI Trabajo 28-06-2025/Población Nacional/Pob_nacional20CSV.csv")
View(poblacion_total)
View(poblacion_total)
View(poblacion_total)
poblacion = poblacion_total |>
dplyr::filter(ENTIDAD !=0, MUN != 0, LOC = !0)
poblacion = poblacion_total |>
dplyr::filter(ENTIDAD !=0, MUN != 0, LOC != 0)
View(poblacion)
poblacion = poblacion |>
dplyr::filter(LOC != 9999)
View(poblacion)
View(poblacion)
View(poblacion)
View(datos)
View(datos)
poblacion = poblacion |>
dplyr::select(ENTIDAD, MUN, LOC, POBTOT, POBFEM, P_8A14_F, P_15A17_F, PROM_HNV, PCLIM_PMEN, PCATOLICA:PSIN_RELIG, PROM_OCUP)
View(poblacion)
poblacion[poblacion == "*"] = NA
View(poblacion_total)
View(poblacion)
poblacion = poblacion |>  dplyr::mutate(CVEGEO = paste0(sprintf("%02d", ENTIDAD), sprintf("%03d", MUN), sprintf("%02d", LOC))) |>
dplyr::select(CVEGEO, ENTIDAD:PROM_OCUP)
View(poblacion)
poblacion = poblacion |>  dplyr::mutate(CVEGEO = paste0(sprintf("%02d", ENTIDAD), sprintf("%03d", MUN), sprintf("%04d", LOC))) |>
dplyr::select(CVEGEO, ENTIDAD:PROM_OCUP)
View(poblacion)
View(poblacion_total)
View(poblacion)
View(poblacion)
length(poblacion$CVEGEO |>  unique())
View(datos)
View(datos)
datos = datos |>  dplyr::select(-DIF_EDAD)
View(poblacion)
View(poblacion)
View(datos)
Tipo_nac_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Simple",
"2" = "Doble",
"3" = "Triple o más",
"4" = "No especificado",
str  # valor por defecto si no hay coincidencia
))
}
View(datos)
View(datos)
View(datos)
names(datos)
View(datos)
#### Remplazar apartir del directorio
datos = datos |>  dplyr::select(-Frecuencia)
Tipo_nac_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Simple",
"2" = "Doble",
"3" = "Triple o más",
"4" = "No especificado",
str  # valor por defecto si no hay coincidencia
))
}
Orden_part_remplazar = function(str) {
return(switch(as.character(str),
"99" = "No especificado",
str  # valor por defecto si no hay coincidencia
))
}
Edociv_mad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Soltera",
"2" = "Casada",
"3" = "Unión libre",
"4" = "Separada",
"5" = "Divorciada",
"6" = "Viuda",
"9" = "No especificado",
str  # valor por defecto si no hay coincidencia
))
}
Escol_mad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Sin escolaridad",
"2" = "De 1 a 3 años de primaria",
"3" = "De 4 a 5 años de primaria",
"4" = "Primaria completa",
"5" = "Secundaria o equivalente",
"6" = "Preparatoria o equivalente",
"7" = "Profesional",
"8" = "Otra",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
Escol_pad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Sin escolaridad",
"2" = "De 1 a 3 años de primaria",
"3" = "De 4 a 5 años de primaria",
"4" = "Primaria completa",
"5" = "Secundaria o equivalente",
"6" = "Preparatoria o equivalente",
"7" = "Profesional",
"8" = "Otra",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
Act_mad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Trabaja",
"2" = "No trabaja",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
Act_pad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Trabaja",
"2" = "No trabaja",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
Sitlab_mad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Tiene trabajo o está buscando",
"2" = "Estudiante",
"3" = "Dedicado a quehaceres del hogar",
"4" = "Jubilado o pensionado",
"5" = "Incapacitado permanentemente para trabajar",
"6" = "Otra",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
Sitlab_pad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Tiene trabajo o está buscando",
"2" = "Estudiante",
"3" = "Dedicado a quehaceres del hogar",
"4" = "Jubilado o pensionado",
"5" = "Incapacitado permanentemente para trabajar",
"6" = "Otra",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
datos$TIPO_NAC =sapply(datos$TIPO_NAC, Tipo_nac_remplazar, simplify = T, USE.NAMES = F)
View(datos)
datos$ORDEN_PART = sapply(datos$ORDEN_PART, Orden_part_remplazar, simplify = T, USE.NAMES = F)
Edociv_mad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Soltera",
"2" = "Casada",
"3" = "Unión libre",
"4" = "Separada",
"5" = "Divorciada",
"6" = "Viuda",
"9" = "No especificado",
str  # valor por defecto si no hay coincidencia
))
}
datos$EDOCIV_MAD = sapply(datos$EDOCIV_MAD, Edociv_mad_remplazar, simplify = T, USE.NAMES = F)
Escol_mad_remplazar = function(str) {
return(switch(as.character(str),
"1" = "Sin escolaridad",
"2" = "De 1 a 3 años de primaria",
"3" = "De 4 a 5 años de primaria",
"4" = "Primaria completa",
"5" = "Secundaria o equivalente",
"6" = "Preparatoria o equivalente",
"7" = "Profesional",
"8" = "Otra",
"9" = "No especificada",
str  # valor por defecto si no hay coincidencia
))
}
datos$ESCOL_MAD = sapply(datos$ESCOL_MAD, Escol_mad_remplazar, simplify = T, USE.NAMES = F)
datos$ESCOL_PAD = sapply(datos$ESCOL_PAD, Escol_pad_remplazar, simplify = T, USE.NAMES = F)
datos$ACT_MAD = sapply(datos$ACT_MAD, Act_mad_remplazar, simplify = T, USE.NAMES = F)
datos$ACT_PAD = sapply(datos$ACT_PAD, Act_pad_remplazar, simplify = T, USE.NAMES = F)
datos$SITLAB_MAD = sapply(datos$SITLAB_MAD, Sitlab_mad_remplazar, simplify = T, USE.NAMES = F)
datos$SITLAB_PAD = sapply(datos$SITLAB_PAD, Sitlab_pad_remplazar, simplify = T, USE.NAMES = F)
View(datos)
library(writexl)
write_xlsx(datos, "datos.xlsx")
write_xlsx(datos, "datos_madres_jovenes.xlsx")
View(datos)
View(datos)
View(poblacion)
View(datos)
View(poblacion)
View(poblacion)
write_xlsx(poblacion, "poblacion_totales_para_madres_jovenes.xlsx")
municipios_mexico = sf::read_sf("../../Lalo/Escuela/Gob/Importantes_documentos_usar/Cartografia_Nacional/Nacional Total/conjunto_de_datos/00mun.shp")
plot(municipios_mexico$geometry)
plot(municipios_mexico$geometry)
View(municipios_mexico)
View(poblacion)
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
poblaciones_municipales = poblacion |>
dplyr::group_by(as.numeric(ENTIDAD),as.numecric(MUN)) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
poblacion = poblacion |>
dplyr::mutate(ENTIDAD = as.numeric(ENTIDAD),
MUN = as.numeric(MUN))
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
poblacion = poblacion |>
dplyr::mutate(dplyr::across(POBTOT:P_15A17_F, as.numeric()))
poblacion <- poblacion |>
dplyr::mutate(dplyr::across(POBTOT:P_15A17_F, ~ as.numeric(gsub(",", "", .x))))
View(poblacion)
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
View(poblaciones_municipales)
View(poblacion)
names(poblacion)
poblacion[, c(5:ncol(poblacion))] = lapply(poblacion[, c(5:ncol(poblacion))], as.numeric)
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
View(poblaciones_municipales)
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM, na.rm = T),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F), Poblacion_total_Femenina_18A20 = sum(P_15A17_F))
View(poblaciones_municipales)
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT), Poblacion_total_Femenina = sum(POBFEM, na.rm = T),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F, na.rm = T), Poblacion_total_Femenina_18A20 = sum(P_15A17_F, na.rm = T))
poblaciones_municipales = poblacion |>
dplyr::group_by(ENTIDAD,MUN) |>
dplyr::summarise(Poblacion_total = sum(POBTOT, na.rm = T), Poblacion_total_Femenina = sum(POBFEM, na.rm = T),
Poblacion_total_Femenina_11A17 =sum(P_8A14_F, na.rm = T), Poblacion_total_Femenina_18A20 = sum(P_15A17_F, na.rm = T))
View(poblaciones_municipales)
View(poblacion_total)
View(municipios_mexico)
View(poblaciones_municipales)
poblaciones_municipales = poblaciones_municipales |>
dplyr::mutate(CVEGEO = paste0(sprintf("%02d", ENTIDAD), sprintf("%03d", MUN))) |>
dplyr::select(-ENTIDAD,-MUN)
View(poblaciones_municipales)
View(poblaciones_municipales)
View(poblaciones_municipales)
poblaciones_municipales = poblaciones_municipales |>
dplyr::select(CVEGEO, Poblacion_total:Poblacion_total_Femenina_18A20)
poblaciones_municipales = poblaciones_municipales |> dplyr::ungroup() |>
dplyr::select(CVEGEO, Poblacion_total:Poblacion_total_Femenina_18A20)
View(poblaciones_municipales)
View(municipios_mexico)
names(poblaciones_municipales)
municipios_mexico = merge(x = municipios_mexico |>  dplyr::select(CVEGEO,NOMGEO,geometry), y = poblaciones_municipales, by.x= "CVEGEO", by.y = "CVEGEO", all.x = T)
View(municipios_mexico)
class(municipios_mexico)
View(poblaciones_municipales)
View(municipios_mexico)
View(datos)
View(poblaciones_municipales)
municipios_mexico = municipios_mexico |>
dplyr::mutate(Poblacion_total_Femenina_11A20 = Poblacion_total_Femenina_11A17 + Poblacion_total_Femenina_18A20)
View(municipios_mexico)
municipios_mexico = municipios_mexico |>
dplyr::select(CVEGEO:Poblacion_total_Femenina_18A20, Poblacion_total_Femenina_11A20, geometry)
View(municipios_mexico)
View(poblacion)
View(poblaciones_municipales)
View(municipios_mexico)
View(poblacion)
View(datos)
datos = datos |>
dplyr::mutate(CVEGEO_MUN = substr(x = CVEGEO_Nueva, start = 1, stop = 5))
View(datos)
View(municipios_mexico)
View(municipios_mexico)
View(datos)
contar_datos = datos |> dplyr::group_by(CVEGEO_MUN, EDAD_MADN) |>
dplyr::summarise(conteo = dplyr::n())
View(contar_datos)
View(municipios_mexico)
contar_datos = datos |> dplyr::group_by(CVEGEO_MUN) |>
dplyr::summarise(conteo = dplyr::n())
View(contar_datos)
contar_datos = datos |> dplyr::filter(EDAD_MADN != 10) |>
dplyr::group_by(CVEGEO_MUN) |>
dplyr::summarise(conteo = dplyr::n())
View(contar_datos)
municipios_mexico |>  names()
contar_datos |>  names()
municipios_mexico = merge(x = municipios_mexico, y = contar_datos, by.x ="CVEGEO", by.y = "CVEGEO_MUN", all.x = T)
View(municipios_mexico)
names(municipios_mexico)
names(municipios_mexico)[8] = "Conteo_nacimientos"
View(municipios_mexico)
municipios_mexico = municipios_mexico |>
dplyr::mutate(Porcentaje_nacimientos = (Conteo_nacimientos/Poblacion_total_Femenina_11A20)*100,
Porcentaje_libre = 100-Porcentaje_nacimientos)
View(municipios_mexico)
View(municipios_mexico)
municipios_mexico = municipios_mexico |>
dplyr::select(CVEGEO:Conteo_nacimientos, Porcentaje_nacimientos, Porcentaje_libre)
View(municipios_mexico)
municipios_mexico = municipios_mexico |>
dplyr::select(CVEGEO:Conteo_nacimientos, Porcentaje_nacimientos, Porcentaje_libre) |>
dplyr::arrange(dplyr::desc(Porcentaje_nacimientos))
View(municipios_mexico)
View(municipios_mexico)
mapa_web = leaflet() |>
addTiles() |>
addPolygons(data = municipios_mexico, popup = municipios_mexico$Porcentaje_nacimientos, label = municipios_mexico$NOMGEO)
mapa_web
municipios_mexico
View(municipios)
class(municipios_mexico_mapa)
class(municipios_mexico)
municipios_mexico_mapa = sf::st_transform(x = municipios_mexico, crs = sf::st_crs(municipios))
mapa_web = leaflet() |>
addTiles() |>
addPolygons(data = municipios_mexico_mapa, popup = municipios_mexico_mapa$Porcentaje_nacimientos, label = municipios_mexico_mapa$NOMGEO)
mapa_web
mapa_web = leaflet() |>
addTiles() |>
addPolygons(data = municipios_mexico_mapa, popup = municipios_mexico_mapa$Porcentaje_nacimientos, label = municipios_mexico_mapa$NOMGEO)
mapa_web
municipios_mexico_mapa = municipios_mexico_mapa |>
dplyr::mutate(area = sf::st_area(x = municipios_mexico_mapa))
View(municipios_mexico_mapa)
municipios_mexico_mapa = municipios_mexico_mapa |>
dplyr::mutate(area = sf::st_area(x = municipios_mexico_mapa) |>  as.numeric()) |>
dplyr::arrange(dplyr::desc(area), dplyr::desc(Porcentaje_nacimientos))
View(municipios_mexico_mapa)
View(municipios_mexico_mapa)
View(municipios_mexico_mapa)
municipios_mexico_mapa$Porcentaje_nacimientos |>  hist()
View(municipios_mexico_mapa)
nombres_entidades = sf::read_sf("../../Lalo/Escuela/Gob/Importantes_documentos_usar/Cartografia_Nacional/Nacional Total/conjunto_de_datos/00ent.shp")
nombres_entidades = nombres_entidades |>  sf::st_drop_geometry() |>  dplyr::select(CVEGEO,NOMGEO)
municipios_mexico_mapa = municipios_mexico_mapa |>  dplyr::mutate(CVEGEO_ENT = substr(x = CVEGEO,start = 1,stop = 2))
municipios_mexico_mapa = merge(x = municipios_mexico_mapa, y = nombres_entidades, by.x = "CVEGEO_ENT", by.y = "CVEGEO", all.x = T)
View(municipios_mexico_mapa)
municipios_mexico_mapa = municipios_mexico_mapa |>
dplyr::select(CVEGEO,NOMGEO.y,NOMGEO.x:area, geometry)
View(municipios_mexico_mapa)
colnames(municipios_mexico_mapa)[2:3] = c("NOM_ENT", "NOM_MUN")
View(municipios_mexico_mapa)
municipios_mexico_mapa = municipios_mexico_mapa |>
dplyr::arrange(CVEGEO)
View(municipios_mexico_mapa)
sf::write_sf(municipios_mexico_mapa, "INEGI Trabajo 28-06-2025/Nacimientos/Nacimientos_porcentaje_geometria.shp")
write.csv(municipios_mexico_mapa |>  sf::st_drop_geometry(), "INEGI Trabajo 28-06-2025/Nacimientos/Nacimientos_porcentaje.csv", fileEncoding = "latin1")
stats::kmeans(x = municipios_mexico_mapa$Poblacion_total_Femenina, iter.max = 5)
datos = read.csv("INEGI Trabajo 28-06-2025/Nacimientos/Nacimientos_porcentaje.csv", fileEncoding = "latin1")
View(datos)
datos = datos |> dplyr::select(-X)
write.csv(datos, "INEGI Trabajo 28-06-2025/Nacimientos/Nacimientos_porcentaje_utf8.csv", fileEncoding = "UTF-8", row.names = F)
write_xlsx(datos, "INEGI Trabajo 28-06-2025/Nacimientos/Nacimientos_porcentaje_excel.xlsx")
library(writexl)
write_xlsx(datos, "INEGI Trabajo 28-06-2025/Nacimientos/Nacimientos_porcentaje_excel.xlsx")
